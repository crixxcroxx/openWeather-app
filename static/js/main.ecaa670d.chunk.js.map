{"version":3,"sources":["components/SearchBar/SearchBar.jsx","helpers/getDate.js","components/Card/Card.jsx","components/Weekly/Weekly.jsx","components/Side/Side.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","helpers/getShortForecast.js","helpers/getDetailedForecast.js","helpers/getUpcomingForecast.js","components/App/App.jsx","hooks/useFetchForecast.js","index.js"],"names":["SearchBar","handleForm","searchRef","useRef","className","type","ref","placeholder","onClick","current","value","days","shortDays","months","date","getDate","unixtime","d","sDate","getDateSuffix","Date","getDay","dt","getShortDay","getMonth","Card","props","data","currentShort","city","country","src","weather_icon","alt","temp","feels_like","weather_desc","Weekly","upcoming","map","item","Math","round","Side","currentDetailed","Object","entries","key","Loader","Modal","useState","isVisible","setIsVisible","getShortForecast","weather","main","icon","fullKeyName","addZero","t","getTime","h","getHours","m","getMinutes","getDetailedForecast","humidity","pressure","dew_point","uvi","wind_speed","sunrise","sunset","getUpcomingForecast","weekly","dataCopy","upcoming_days","shift","splice","idx","push","day","getDataPerDay","App","isError","setError","isLoading","setIsLoading","fcast","setFcast","setData","base_url","fetchData","url","a","fetch","response","ok","json","val","location","weather_url","c","onecall_url","coord","lat","lon","forecast","name","sys","daily","filterData","shortForecast","detailedForecast","upcomingForecast","getData","useFetchForecast","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecaa670d.chunk.js","sourcesContent":["import { useRef } from 'react';\nimport './searchBar.css';\n\nexport default function SearchBar({ handleForm }) {\n  const searchRef = useRef()\n\n  function search() {\n    if (searchRef.current.value !== '') {\n      handleForm(searchRef.current.value);\n    }\n  }\n\n  return (\n    <div className=\"search-box\">\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          ref={searchRef}\n          placeholder=\"Search City\"\n        />\n        <button onClick={search}>Search</button>\n      </div>\n    </div>\n  );\n}\n","const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\nconst shortDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\nfunction getDateSuffix(d) {\n  let sDate = \"\"\n\n  if(d === 11 || d === 12 || d === 13) return `${d}th`\n\n  //get only ones digit\n  const ones = d % 10\n\n  switch(ones) {\n    case 1:\n      sDate = `${d}st`\n      break;\n    case 2:\n      sDate = `${d}nd`\n      break;\n    case 3:\n      sDate = `${d}rd`\n      break;\n    default:\n      sDate = `${d}th`\n      break;\n  }\n\n  return sDate\n}\n\nconst date = {\n  getDate: unixtime => {\n    const dt = new Date(unixtime * 1000)\n    const currentDate = dt.getDate()\n    const suffixedDate = getDateSuffix(currentDate)\n\n    return suffixedDate\n  },\n  getDay: unixtime => {\n    const dt = new Date(unixtime * 1000)\n    const currentDay = days[dt.getDay()]\n\n    return currentDay\n  },\n  getShortDay: unixtime => {\n    const dt = new Date(unixtime * 1000)\n    const currentDay = shortDays[dt.getDay()]\n\n    return currentDay\n  },\n  getMonth: unixtime => {\n    const dt = new Date(unixtime * 1000)\n    const currentMonth = months[dt.getMonth()]\n\n    return currentMonth\n  }\n\n}\n\nexport default date\n","import './card.css';\nimport date from '../../helpers/getDate';\n\nexport default function Card(props) {\n  const data = props.currentShort\n\n  return(\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <h2>{data && date.getDay(data.dt)}</h2>\n        <p>{data && date.getDate(data.dt)}, {data && date.getMonth(data.dt)}</p>\n        <p>{data && data.city}, {data && data.country}</p>\n      </div>\n      <div className=\"card-body\">\n        <img className=\"card-icon\" src={data && data.weather_icon} alt=\"forecast-ico\" />\n        <h1>{data && data.temp}&#8451;</h1>\n        <p>Feels like <span>{data && data.feels_like}&#8451;</span></p>\n        <p>{data && data.weather_desc}</p>\n      </div>\n    </div>\n  );\n}\n","import './weekly.css';\nimport date from '../../helpers/getDate';\n\nexport default function Weekly(props) {\n  const data = props.upcoming\n\n  return(\n    <div className=\"weekly-forecast-wrapper\">\n      <p className=\"section-title\">Weekly Forecast</p>\n\n      <div className=\"weekly-forecast\">\n        {props && data.map(item =>\n          <div className=\"widget\" key={item.dt}>\n            <img className=\"widget-icon\" src={item.weather_icon} alt=\"forecast-ico\" />\n            <p>{date.getShortDay(item.dt)}</p>\n            <p>{Math.round(item.temp)}&#8451;</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n","import './side.css';\nimport Weekly from '../Weekly/Weekly';\n\nexport default function Side(props) {\n  const { currentDetailed, upcoming } = props\n\n  return(\n    <div className=\"side\">\n      <div className=\"detailed-info\">\n        {props && Object.entries(currentDetailed).map(([key, value]) =>\n          <div className=\"item\" key={key}>\n            <p className=\"label\">{key}</p>\n            <p className=\"value\">{value}</p>\n          </div>\n        )}\n      </div>\n      <Weekly upcoming={upcoming} />\n    </div>\n  );\n}\n","import \"./loader.css\";\n\nexport default function Loader() {\n\n  return (\n    <div className=\"loader\">\n      <p>Loading</p>\n    </div>\n  );\n}","import { useState } from \"react\";\n\nimport \"./modal.css\";\n\nexport default function Modal() {\n  const [isVisible, setIsVisible] = useState(true);\n\n  return (\n    <>\n      {isVisible &&\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <i>Location not Found!</i>\n            <button onClick={() => setIsVisible(false)}>\n              Ok\n            </button>\n          </div>\n        </div>\n      }\n    </>\n  );\n}","const getShortForecast = data => ({\n  dt: data.current.dt,\n  city: data.current.city,\n  country: data.current.country,\n  feels_like: data.current.feels_like,\n  temp: data.current.temp,\n  weather_desc: data.current.weather[0].main,\n  weather_icon: `http://openweathermap.org/img/wn/${data.current.weather[0].icon}@2x.png`\n})\n\nexport default getShortForecast\n","const fullKeyName = {\n  humidity: \"Humidity\",\n  pressure: \"Pressure\",\n  dew_point: \"Dew Point\",\n  uvi: \"UV Index\",\n  wind_speed: \"Wind Speed\",\n  sunrise: \"Sunrise\",\n  sunset: \"Sunset\"\n}\n\nfunction addZero(t) {\n  if(t < 10)  { return `0${t}` }\n\n  return t\n}\n\nfunction getTime(unixtime) {\n  const d = new Date(unixtime * 1000);\n  const h = addZero(d.getHours())\n  const m = addZero(d.getMinutes())\n\n  return `${h} : ${m}`\n}\n\nconst getDetailedForecast = data => ({\n  [fullKeyName.humidity]: `${data.current.humidity}%`,\n  [fullKeyName.pressure]: `${data.current.pressure}hPa`,\n  [fullKeyName.dew_point]: `${data.current.dew_point}°C`,\n  [fullKeyName.uvi]: data.current.uvi,\n  [fullKeyName.wind_speed]: `${data.current.wind_speed}m/s`,\n  [fullKeyName.sunrise]: getTime(data.current.sunrise),\n  [fullKeyName.sunset]: getTime(data.current.sunset)\n})\n\nexport default getDetailedForecast\n","function getDataPerDay(data) {\n  let weekly = []\n  let dataCopy = data.upcoming_days\n\n  // only show the next 5 days\n  dataCopy.shift()\n  dataCopy.splice(5)\n\n  dataCopy.map((item, idx) =>\n    weekly.push({\n      dt: item.dt,\n      temp: item.temp.day,\n      weather_icon: `http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`\n    })\n  )\n\n  return weekly\n}\n\nconst getUpcomingForecast = data => getDataPerDay(data)\n\nexport default getUpcomingForecast\n\n","import './app.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Card from '../Card/Card';\nimport Side from '../Side/Side';\nimport Loader from '../Loader/Loader';\nimport Modal from '../Modal/Modal';\nimport useFetchForecast from '../../hooks/useFetchForecast';\n\nexport default function App() {\n  const { data, isLoading, isError, fcast: forecast, getData } = useFetchForecast()\n\n  return (\n    <>\n      {!forecast\n        ? <>\n            { !isLoading && <SearchBar handleForm={getData}/> }\n            { isLoading && <Loader /> }\n            { isError && <Modal />}\n          </>\n\n        : <>\n            { isError && <Modal /> }\n\n            <div className=\"app\">\n              <SearchBar handleForm={getData}/>\n\n              <div className=\"forecast-wrapper\">\n                <Card currentShort={data.shortForecast} />\n                <Side\n                  currentDetailed={data.detailedForecast}\n                  upcoming={data.upcomingForecast}\n                />\n              </div>\n            </div>\n          </>\n      }\n    </>\n  );\n}\n","import { useState } from 'react';\nimport getShortForecast from '../helpers/getShortForecast';\nimport getDetailedForecast from '../helpers/getDetailedForecast';\nimport getUpcomingForecast from '../helpers/getUpcomingForecast';\n\nexport default function useFetchForecast() {\n  const [isError, setError] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [fcast, setFcast] = useState(false)\n  const [data, setData] = useState({})\n  const key = \"31040fa663c3e413a9eb4265bafd97de\"\n  const base_url = \"https://api.openweathermap.org/data/2.5\"\n\n  async function fetchData(url) {\n    setError(false)\n    setIsLoading(true)\n\n    let response = await fetch(url)\n\n    if(!response.ok) {\n      setError(true)\n      setIsLoading(false)\n\n      return false\n    }  else {\n      let val = await response.json()\n\n      return val\n    }\n  }\n\n  async function getData(location) {\n    const weather_url = `${base_url}/weather?q=${location}&appid=${key}`\n    let c = await fetchData(weather_url)\n\n    if(c) {\n      const onecall_url = `${base_url}/onecall?lat=${c.coord.lat}&lon=${c.coord.lon}&exclude=hourly,minutely&units=metric&appid=${key}`\n      let forecast = await fetchData(`${onecall_url}`)\n\n      if(forecast) {\n        forecast.current.city = c.name\n        forecast.current.country = c.sys.country\n\n        const current = forecast.current\n        const upcoming_days = forecast.daily\n\n        filterData({current, upcoming_days})\n      }\n    }\n  }\n\n  function filterData(d) {\n    const shortForecast = getShortForecast(d)\n    const detailedForecast = getDetailedForecast(d)\n    const upcomingForecast = getUpcomingForecast(d)\n\n    setData({shortForecast, detailedForecast, upcomingForecast})\n    setIsLoading(false)\n    setFcast(true)\n  }\n\n  return { data, isLoading, isError, fcast, getData }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//npx browserslist@latest --update-db\n"],"sourceRoot":""}